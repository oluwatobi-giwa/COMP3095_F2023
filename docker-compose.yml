# dependency for product service:

version: '3.9'
services:
  product-service:
    ports:
      - "8084:8084"
    build:
      context: ./product-service
      dockerfile: ./Dockerfile
    image: product-service:1.0
    container_name: product-service
    depends_on:
      - mongodb
    networks:
      - spring
    environment:
      SPRING_PROFILES_ACTIVE: docker

  order-service:
    ports:
      - "8082:8082"
    build:
      context: ./order-service
      dockerfile: ./Dockerfile
    image: order-service:1.0
    container_name: order-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-order
    networks:
      - spring

  inventory-service:
    ports:
      - "8083:8083"
    build:
      context: ./inventory-service
      dockerfile: ./Dockerfile
    image: inventory-service:1.0
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACRIVE: docker
    depends_on:
      - postgres-inventory
    networks:
      - spring

  discovery-service:
    ports:
      - "8761:8761"
    build:
      context: ./discovery-service
      dockerfile: ./Dockerfile
    image: discovery-service:1.0
    container_name: discovery-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/


  mongodb:
    ports:
      - "27017:27017"
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/products:/data/db # source:destination
      - ./data/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  mongodb-express:
    ports:
      - "8081:8081"
    image: mongo-express
    container_name: mongo-express-1
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootadmin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring

  postgres-order:
    ports:
      - "5431:5432"
    image: postgres:latest
    container_name: Postgres-Order
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=order-service
    volumes:
      - ./data/postgres/order-service:/data/postgres # source:destination
      - ./init/postgres/order-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - spring


  postgres-inventory:
    ports:
      - "5434:5432"
    image: postgres:latest
    container_name: Postgres-Inventory
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=inventory-service
    volumes:
      - ./data/postgres/inventory-service:/data/postgres # source:destination
      - ./init/postgres/inventory-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - spring

  pgadmin:
    ports:
      - "8888:80"
    image: dpage/pgadmin4:latest
    container_name: PgAdmin-1
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      - PGADMIN_DEFAULT_PASSWORD=password
    restart: unless-stopped
    networks:
      - spring

networks:
  spring:
    driver: bridge